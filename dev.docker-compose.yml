version: '2'

services:
  nginx:
    restart: unless-stopped
    image: nginx
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"
    network_mode: host

  nginx-gen:
    restart: unless-stopped
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    restart: unless-stopped
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
      - NGINX_PROXY_CONTAINER=nginx

  web:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: ./dev.Dockerfile
    volumes:
      - "./frontend:/app"
    environment:
      - VIRTUAL_HOST=${APP_DOMAIN}
      - VIRTUAL_PATH=/
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${APP_DOMAIN}
      - LETSENCRYPT_EMAIL=maxmorel@pisanvs.cl
    networks:
      - default
      - nginx-proxy
  backend:
    image: golang:alpine
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c", "cd /app && go run /app/src"]
    volumes:
      - "./backend:/app"
    environment:
      - VIRTUAL_HOST=api.${APP_DOMAIN}
      - VIRTUAL_PATH=/
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=api.${APP_DOMAIN}
      - LETSENCRYPT_EMAIL=maxmorel@pisanvs.cl
    networks:
      - default
      - nginx-proxy

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongodata:/data/db
    networks:
      nginx-proxy:
        ipv4_address: 172.16.150.17

volumes:
  mongodata:

networks:
  default:
    
  nginx-proxy:
    driver: bridge
    name: nginx-proxy
    ipam:
      driver: default
      config:
        - subnet: 172.16.150.0/24
          gateway: 172.16.150.1